@{
    ViewData["Title"] = "Home Page";
}

<div class="p-3">
    <h2>Dashboard</h2>
    <div class="row mt-4">
        <div class="col-md-3">
            <div class="card bg-primary text-light">
                <div class="card-header">
                    Total Items
                </div>
                <div class="card-body text-center">
                    <h2>@ViewBag.TotalItems</h2>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-success text-light">
                <div class="card-header">
                    Total Categories
                </div>
                <div class="card-body text-center">
                    <h2>@ViewBag.TotalCategories</h2>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-warning text-light">
                <div class="card-header">
                    Total Quantities
                </div>
                <div class="card-body text-center">
                    <h2>@ViewBag.TotalQuantity</h2>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-danger text-light">
                <div class="card-header">
                    Tatal Stock Value
                </div>
                <div class="card-body text-center">
                    <h2>@ViewBag.TotalValue BDT</h2>
                </div>
            </div>
        </div>
    </div>

    <div class="my-5">
        <div class="w-75 mx-auto">
            <canvas id="myChart"></canvas>
        </div>
        <div class="w-50 mx-auto">
            <canvas id="myChart2"></canvas>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    const ctx = document.getElementById('myChart');
    const ctx2 = document.getElementById('myChart2');

    // Get product data from controller
    const productNames = @Html.Raw(Json.Serialize(ViewBag.ProductNames));
    const productQuantities = @Html.Raw(Json.Serialize(ViewBag.ProductQuantities));
    const productValues = @Html.Raw(Json.Serialize(ViewBag.ProductValues));

    // Bar chart for product quantities
    new Chart(ctx, {
      type: 'bar',
      data: {
        labels: productNames,
        datasets: [{
          label: 'Product Quantities',
          data: productQuantities,
          backgroundColor: 'rgba(54, 162, 235, 0.7)',
          borderColor: 'rgba(54, 162, 235, 1)',
          borderWidth: 1
        }]
      },
      options: {
        responsive: true,
        plugins: {
          title: {
            display: true,
            text: 'Product Quantities in Stock'
          },
          legend: {
            position: 'top',
          }
        },
        scales: {
          y: {
            beginAtZero: true,
            title: {
              display: true,
              text: 'Quantity'
            }
          },
          x: {
            title: {
              display: true,
              text: 'Products'
            }
          }
        }
      }
    });

    // Pie chart for product values
    new Chart(ctx2, {
      type: 'pie',
      data: {
        labels: productNames,
        datasets: [{
          label: 'Product Values',
          data: productValues,
          backgroundColor: [
            'rgba(255, 99, 132, 0.7)',
            'rgba(54, 162, 235, 0.7)',
            'rgba(255, 206, 86, 0.7)',
            'rgba(75, 192, 192, 0.7)',
            'rgba(153, 102, 255, 0.7)',
            'rgba(255, 159, 64, 0.7)',
            'rgba(199, 199, 199, 0.7)',
            'rgba(83, 102, 255, 0.7)',
            'rgba(40, 159, 64, 0.7)',
            'rgba(210, 199, 199, 0.7)'
          ],
          borderColor: [
            'rgba(255, 99, 132, 1)',
            'rgba(54, 162, 235, 1)',
            'rgba(255, 206, 86, 1)',
            'rgba(75, 192, 192, 1)',
            'rgba(153, 102, 255, 1)',
            'rgba(255, 159, 64, 1)',
            'rgba(199, 199, 199, 1)',
            'rgba(83, 102, 255, 1)',
            'rgba(40, 159, 64, 1)',
            'rgba(210, 199, 199, 1)'
          ],
          borderWidth: 1
        }]
      },
      options: {
        responsive: true,
        plugins: {
          title: {
            display: true,
            text: 'Product Values in Stock (BDT)'
          },
          legend: {
            position: 'right',
          },
          tooltip: {
            callbacks: {
              label: function(context) {
                let label = context.label || '';
                if (label) {
                  label += ': ';
                }
                label += context.formattedValue + ' BDT';
                return label;
              }
            }
          }
        }
      }
    });
</script>
